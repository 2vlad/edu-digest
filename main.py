#!/usr/bin/env python3
"""
–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –∑–∞–ø—É—Å–∫–∞ EdTech News Digest Bot
"""
import sys
import os
import asyncio

sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

async def run_collect():
    """–ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    from src.news_collector import NewsCollector
    
    collector = NewsCollector()
    result = await collector.run_full_cycle()
    
    if result["success"]:
        print("‚úÖ –°–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result['channels_processed']} –∫–∞–Ω–∞–ª–æ–≤, {result['messages_collected']} —Å–æ–æ–±—â–µ–Ω–∏–π")
        print(f"üì∞ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {result['news_published']} –Ω–æ–≤–æ—Å—Ç–µ–π")
        return 0
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π: {result.get('error', 'Unknown error')}")
        return 1

def run_admin():
    """–ó–∞–ø—É—Å–∫ Flask –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    try:
        from src.admin_panel import app
        from src.config import FLASK_PORT
        print(f"üåê –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–∞ http://localhost:{FLASK_PORT}")
        app.run(host='0.0.0.0', port=FLASK_PORT, debug=False)
        return 0
    except ImportError as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
        print("üîß –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: pip install -r requirements.txt")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
        return 1

if __name__ == "__main__":
    print("EdTech News Digest Bot v0.1.0")
    print("="*40)
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "collect":
            print("üöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π...")
            exit_code = asyncio.run(run_collect())
            sys.exit(exit_code)
            
        elif command == "admin":
            print("üåê –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
            sys.exit(run_admin())
            
        elif command == "test":
            print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞...")
            # –ó–∞–ø—É—Å–∫ —Å —Å–∏–º—É–ª—è—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö
            exit_code = asyncio.run(run_collect())
            sys.exit(exit_code)
            
        else:
            print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {command}")
            sys.exit(1)
    else:
        print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("  python main.py collect  - –°–±–æ—Ä –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π")
        print("  python main.py admin    - –ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
        print("  python main.py test     - –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º")
        print()
        print("–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:")
        print("  python main.py collect  # –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–±–æ—Ä–∞")
        print("  python main.py admin    # –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ :5000")