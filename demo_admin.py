#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
"""
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def demo_admin_functionality():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    print("üåê –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Flask –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
    print("="*45)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from src.admin_panel import app, get_dashboard_stats, get_run_logs
        from src.database import ChannelsDB
        
        with app.app_context():
            print("‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ")
            print(f"   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {app.config.get('DATABASE', 'default')}")
            print(f"   Secret key: {'–Ω–∞—Å—Ç—Ä–æ–µ–Ω' if app.secret_key else '–ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞:")
            stats = get_dashboard_stats()
            for key, value in stats.items():
                if key != 'last_run':
                    print(f"   {key}: {value}")
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–∞–Ω–∞–ª–∞–º–∏
            print("\nüì∫ –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:")
            channels = ChannelsDB.get_active_channels()
            for channel in channels:
                print(f"   {channel['username']} - {channel['display_name']} (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {channel['priority']})")
            
            # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏
            print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø—É—Å–∫–∏:")
            logs = get_run_logs(3)
            for log in logs:
                status = log['status']
                time = log['started_at'][:19] if log['started_at'] else 'N/A'
                print(f"   [{time}] {status} - –∫–∞–Ω–∞–ª–æ–≤: {log['channels_processed'] or 0}, –Ω–æ–≤–æ—Å—Ç–µ–π: {log['news_published'] or 0}")
            
            print(f"\nüåê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ –∑–∞–ø—É—Å–∫—É:")
            print(f"   –ö–æ–º–∞–Ω–¥–∞: python main.py admin")
            print(f"   URL: http://localhost:5002")
            
            print(f"\nüí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
            routes = []
            for rule in app.url_map.iter_rules():
                if rule.endpoint != 'static' and 'GET' in rule.methods:
                    routes.append(rule.rule)
            
            main_routes = ['/', '/channels', '/channels/add', '/settings', '/logs', '/health']
            for route in main_routes:
                if route in routes:
                    print(f"   ‚úÖ {route}")
                else:
                    print(f"   ‚ùå {route}")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = demo_admin_functionality()
    if success:
        print("\nüéâ –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é")