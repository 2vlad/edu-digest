#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
"""

import sys
sys.path.append('src')

def main():
    print("üß™ –ë–´–°–¢–†–´–ô –¢–ï–°–¢ SUPABASE –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
    print("=" * 50)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        print("1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
        from src.config import DATABASE_URL, SUPABASE_URL, SUPABASE_KEY
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –Ω–µ placeholder'—ã
        if 'your-project-ref' in SUPABASE_URL:
            print("‚ùå SUPABASE_URL —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python configure_supabase_interactive.py")
            return False
            
        if 'your-anon-public' in SUPABASE_KEY:
            print("‚ùå SUPABASE_ANON_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python configure_supabase_interactive.py")
            return False
            
        if 'your-password' in DATABASE_URL:
            print("‚ùå DATABASE_URL —Å–æ–¥–µ—Ä–∂–∏—Ç placeholder") 
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python configure_supabase_interactive.py")
            return False
        
        print(f"‚úÖ URL: {SUPABASE_URL}")
        print(f"‚úÖ Key: {SUPABASE_KEY[:20]}...")
        print(f"‚úÖ DB: {DATABASE_URL[:30]}...")
        
        # –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        import psycopg2
        from psycopg2.extras import RealDictCursor
        
        conn = psycopg2.connect(
            DATABASE_URL,
            cursor_factory=RealDictCursor,
            connect_timeout=10
        )
        
        cursor = conn.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()['version']
        
        print(f"‚úÖ PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        print(f"üêò –í–µ—Ä—Å–∏—è: {version[:60]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")
        cursor.execute("""
            SELECT table_name FROM information_schema.tables 
            WHERE table_schema = 'public' AND table_type = 'BASE TABLE'
            ORDER BY table_name
        """)
        
        tables = [row['table_name'] for row in cursor.fetchall()]
        if tables:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
            for table in tables:
                print(f"   üìã {table}")
        else:
            print("‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –Ω—É–∂–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")
            print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python setup_supabase_local.py")
        
        conn.close()
        
        print("\nüéâ SUPABASE –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢!")
        return True
        
    except psycopg2.OperationalError as db_error:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {db_error}")
        
        if "authentication failed" in str(db_error).lower():
            print("üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è –≤ DATABASE_URL")
        elif "connection refused" in str(db_error).lower():
            print("üåê –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º") 
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Supabase —Å–µ—Ä–≤–µ—Ä–∞")
        elif "timeout" in str(db_error).lower():
            print("‚è∞ –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        else:
            print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å DATABASE_URL")
            
        return False
        
    except ImportError as import_error:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {import_error}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install psycopg2-binary")
        return False
        
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        print(f"üìã –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    success = main()
    if success:
        print("\n‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –≥–æ—Ç–æ–≤–æ!")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å: python test_local_supabase.py")
    else:
        print("\n‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–æ–±–ª–µ–º—ã –≤—ã—à–µ")