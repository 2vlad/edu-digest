#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã
"""

import asyncio
import sys
sys.path.append('src')

from src.database import ChannelsDB

async def setup_test_channels():
    """–î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ EdTech –∫–∞–Ω–∞–ª—ã –¥–ª—è —Ç–µ—Å—Ç–∞"""
    
    test_channels = [
        ("@edtexno", "EdTexno", 10),
        ("@habr_career", "–ö–∞—Ä—å–µ—Ä–∞ –•–∞–±—Ä", 8),
        ("@te_st_channel", "–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª", 5),
    ]
    
    print("üì° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...")
    
    for username, display_name, priority in test_channels:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –∫–∞–Ω–∞–ª
            existing_channels = ChannelsDB.get_active_channels()
            exists = any(ch['username'] == username for ch in existing_channels)
            
            if not exists:
                channel_id = ChannelsDB.add_channel(username, display_name, priority)
                print(f"‚ûï –î–æ–±–∞–≤–ª–µ–Ω –∫–∞–Ω–∞–ª: {display_name} ({username}) - ID: {channel_id}")
            else:
                print(f"‚úÖ –ö–∞–Ω–∞–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {display_name} ({username})")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ {username}: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤
    channels = ChannelsDB.get_active_channels()
    print(f"\nüìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤: {len(channels)}")
    for ch in channels:
        print(f"   - {ch['display_name']} ({ch['username']}) - –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: {ch['priority']}")

async def test_news_collection_with_channels():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç —Å –∫–∞–Ω–∞–ª–∞–º–∏"""
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª—ã
    await setup_test_channels()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º NewsCollector
    from src.news_collector import NewsCollector
    
    print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...")
    
    collector = NewsCollector()
    await collector.initialize()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª
    result = await collector.run_full_cycle()
    
    print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   - –£—Å–ø–µ—Ö: {result.get('success', False)}")
    print(f"   - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {result.get('channels_processed', 0)}")
    print(f"   - –°–æ–æ–±—â–µ–Ω–∏–π —Å–æ–±—Ä–∞–Ω–æ: {result.get('messages_collected', 0)}")
    print(f"   - –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {result.get('news_published', 0)}")
    
    if result.get('error'):
        print(f"   - –û—à–∏–±–∫–∞: {result['error']}")
    
    return result.get('success', False)

if __name__ == "__main__":
    success = asyncio.run(test_news_collection_with_channels())
    
    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üöÄ –ú–æ–∂–Ω–æ –¥–µ–ø–ª–æ–∏—Ç—å –Ω–∞ Railway!")
    else:
        print("\n‚ùå –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º")
        sys.exit(1)