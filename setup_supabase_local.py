#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import sys
import os
sys.path.append('src')

def main():
    print("üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê SUPABASE")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        from src.config import DATABASE_URL, SUPABASE_URL, SUPABASE_KEY
        
        needs_setup = (
            not SUPABASE_URL or "your-project-ref" in SUPABASE_URL or
            not SUPABASE_KEY or "your-anon-public" in SUPABASE_KEY or  
            not DATABASE_URL or "your-password" in DATABASE_URL
        )
        
        if not needs_setup:
            print("‚úÖ Supabase —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
            print(f"üìä URL: {SUPABASE_URL}")
            print(f"üîë Key: {SUPABASE_KEY[:20]}...")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            print("\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
            try:
                # –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
                result = test_supabase_connection()
                if result:
                    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    
                    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
                    print("\n3Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü...")
                    setup_result = setup_supabase_tables()
                    if setup_result:
                        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                        return True
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü")
                        return False
                else:
                    print("‚ùå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    return False
                    
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
                return False
        else:
            print("‚ùå Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï:")
            print_setup_instructions()
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_supabase_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à –≥–æ—Ç–æ–≤—ã–π –º–æ–¥—É–ª—å
        from src.supabase_db import supabase_db
        
        if supabase_db.initialize():
            print("‚úÖ Supabase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            conn = supabase_db.get_connection()
            cursor = conn.cursor()
            cursor.execute("SELECT version();")
            version = cursor.fetchone()['version']
            print(f"‚úÖ PostgreSQL –≤–µ—Ä—Å–∏—è: {version[:50]}...")
            
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Supabase")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

def setup_supabase_tables():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ Supabase"""
    try:
        from src.supabase_db import init_supabase_database
        
        print("üóÉÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ Supabase...")
        result = init_supabase_database()
        
        if result:
            print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã:")
            print("   - channels (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∫–∞–Ω–∞–ª—ã)")
            print("   - processed_messages (–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)")
            print("   - settings (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã)")
            print("   - run_logs (–ª–æ–≥–∏ –∑–∞–ø—É—Å–∫–æ–≤)")
            
            # –î–æ–±–∞–≤–ª—è–µ–º EdTech –∫–∞–Ω–∞–ª—ã
            print("\nüì∫ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ EdTech –∫–∞–Ω–∞–ª–æ–≤...")
            add_edtech_channels()
            
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±–ª–∏—Ü: {e}")
        import traceback
        print(f"üìã –î–µ—Ç–∞–ª–∏: {traceback.format_exc()}")
        return False

def add_edtech_channels():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ EdTech –∫–∞–Ω–∞–ª–æ–≤"""
    try:
        from src.supabase_db import SupabaseChannelsDB
        
        channels = [
            ("@edtexno", "EdTechno", 10),
            ("@vc_edtech", "VC EdTech", 9), 
            ("@rusedweek", "Russian EdWeek", 8),
            ("@edtech_hub", "EdTech Hub", 8),
            ("@prosv_media", "–ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏–µ –ú–µ–¥–∏–∞", 7),
            ("@digitaleducation", "–¶–∏—Ñ—Ä–æ–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", 7),
            ("@skillfactory_news", "SkillFactory News", 6),
            ("@netology_ru", "–ù–µ—Ç–æ–ª–æ–≥–∏—è", 6),
            ("@geekbrains_ru", "GeekBrains", 6),
            ("@skyengschool", "Skyeng", 5)
        ]
        
        added_count = 0
        for username, display_name, priority in channels:
            try:
                channel_id = SupabaseChannelsDB.add_channel(username, display_name, priority)
                print(f"‚úÖ {display_name} (ID: {channel_id})")
                added_count += 1
            except Exception as e:
                if "—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" in str(e) or "duplicate key" in str(e):
                    print(f"‚ÑπÔ∏è {display_name} - —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                else:
                    print(f"‚ùå {display_name} - –æ—à–∏–±–∫–∞: {e}")
        
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {added_count}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤: {e}")
        return False

def print_setup_instructions():
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print("""
üîß –ù–ê–°–¢–†–û–ô–ö–ê SUPABASE:

1Ô∏è‚É£ –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç:
   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://supabase.com
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "New project"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é
   ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: "EdTech News Digest"  
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω (Europe –¥–ª—è –ª—É—á—à–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏)
   ‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å
   ‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "Create new project"

2Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á–∏:
   ‚Ä¢ –í –ª–µ–≤–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ Settings ‚Üí API
   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ Project URL
   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ anon public key

3Ô∏è‚É£ –ü–æ–ª—É—á–∏—Ç–µ Database URL:
   ‚Ä¢ –í –ª–µ–≤–æ–º –º–µ–Ω—é –≤—ã–±–µ—Ä–∏—Ç–µ Settings ‚Üí Database
   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ "Connection string"
   ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ "URI" 
   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

4Ô∏è‚É£ –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª:
   ‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç–µ SUPABASE_URL –Ω–∞ –≤–∞—à Project URL
   ‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç–µ SUPABASE_ANON_KEY –Ω–∞ –≤–∞—à anon public key  
   ‚Ä¢ –ó–∞–º–µ–Ω–∏—Ç–µ DATABASE_URL –Ω–∞ –≤–∞—à—É —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è

5Ô∏è‚É£ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:
   python setup_supabase_local.py

üìã –ü—Ä–∏–º–µ—Ä .env:
SUPABASE_URL="https://abcdefgh.supabase.co"
SUPABASE_ANON_KEY="eyJ0eXAiOiJKV1QiLCJhbGc..."
DATABASE_URL="postgresql://postgres:your_password@db.abcdefgh.supabase.co:5432/postgres"
""")

if __name__ == "__main__":
    success = main()
    
    if success:
        print("\nüéâ SUPABASE –ù–ê–°–¢–†–û–ï–ù –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å: python test_local_supabase.py")
    else:
        print("\n‚ùå –ù–ê–°–¢–†–û–ô–ö–ê –ù–ï –ó–ê–í–ï–†–®–ï–ù–ê")
        print("üí° –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤—ã—à–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase")