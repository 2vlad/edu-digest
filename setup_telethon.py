#!/usr/bin/env python3
"""
–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telethon –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
"""

import asyncio
from telethon import TelegramClient
from src.config import TELEGRAM_API_ID, TELEGRAM_API_HASH

async def setup_telethon():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telethon —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π"""
    
    client = TelegramClient('edu_digest_bot', int(TELEGRAM_API_ID), TELEGRAM_API_HASH)
    
    print("üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telethon –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤...")
    print("üì± –í–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∫–æ–¥ –∏–∑ SMS")
    
    await client.start()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    me = await client.get_me()
    if me:
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {me.first_name} ({me.username})")
        print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {me.phone}")
        print("üíæ –°–µ—Å—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª edu_digest_bot.session")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ @edtexno...")
        try:
            entity = await client.get_entity('@edtexno')
            print(f"üì° –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: {entity.title}")
            
            messages_count = 0
            async for message in client.iter_messages(entity, limit=3):
                if message.text:
                    messages_count += 1
                    print(f"üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ {messages_count}: {message.text[:100]}...")
            
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {messages_count} —Å–æ–æ–±—â–µ–Ω–∏–π")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞: {e}")
    
    await client.disconnect()
    print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    asyncio.run(setup_telethon())