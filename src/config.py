import os
from dotenv import load_dotenv

load_dotenv()

# Telegram API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
TELEGRAM_API_ID = os.getenv('TELEGRAM_API_ID')
TELEGRAM_API_HASH = os.getenv('TELEGRAM_API_HASH')
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TARGET_CHANNEL = os.getenv('TARGET_CHANNEL', '@vestnik_edtech')

# Claude API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
ANTHROPIC_API_KEY = os.getenv('ANTHROPIC_API_KEY')

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ Railway –∏—Å–ø–æ–ª—å–∑—É–µ–º volume –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è
if os.getenv('RAILWAY_ENVIRONMENT'):
    print("üöÑ Railway environment detected")
    # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å /data, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º /tmp
    try:
        print("üîç Attempting to create /data directory...")
        os.makedirs('/data', exist_ok=True)
        print("‚úÖ /data directory created/exists")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å
        print("‚úçÔ∏è Testing write permissions to /data...")
        test_file = '/data/.write_test'
        with open(test_file, 'w') as f:
            f.write('test')
        os.remove(test_file)
        DATABASE_PATH = '/data/edu_digest.db'
        print(f"üóÑÔ∏è ‚úÖ Using /data for persistent storage: {DATABASE_PATH}")
    except (PermissionError, OSError) as e:
        print(f"‚ö†Ô∏è No access to /data ({e}), falling back to /tmp")
        DATABASE_PATH = '/tmp/edu_digest.db'
        print(f"üìÅ Using temporary storage: {DATABASE_PATH}")
else:
    # –õ–æ–∫–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
    DATABASE_PATH = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'data', 'edu_digest.db')
    print(f"üè† Local development mode: {DATABASE_PATH}")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
DEFAULT_MAX_NEWS_COUNT = 10
SCHEDULE_TIMES = ['12:00', '18:00']  # –í—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤

# Flask –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
FLASK_SECRET_KEY = os.getenv('FLASK_SECRET_KEY', 'dev-secret-key-change-in-production')
FLASK_PORT = int(os.getenv('PORT', 5002))