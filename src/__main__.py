#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∫–∞–∫ –º–æ–¥—É–ª—è: python -m src
"""

from .admin_panel import app, FLASK_PORT, create_templates
from .database import init_database, test_db

if __name__ == '__main__':
    import logging
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ debug
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler()
        ]
    )
    
    logger = logging.getLogger(__name__)
    logger.info("üöÄ Starting Flask application...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    logger.info("üîß Initializing database...")
    try:
        init_database()
        if test_db():
            logger.info("‚úÖ Database is ready")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        else:
            logger.warning("‚ö†Ô∏è Database needs verification")
            print("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
    except Exception as e:
        logger.error(f"‚ùå Database initialization error: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
    
    # –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    logger.info("üé® Creating templates...")
    create_templates()
    
    logger.info("üåê Starting Flask server...")
    print("üåê Flask –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞!")
    print(f"üìç –ê–¥—Ä–µ—Å: http://localhost:{FLASK_PORT}")
    print("üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)")
    print("   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")  
    print("   - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∑–∞–ø—É—Å–∫–æ–≤")
    print("   - –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("   - API endpoints")
    print("   - Health check")
    
    app.run(host='0.0.0.0', port=FLASK_PORT, debug=False)