#!/usr/bin/env python3
"""
–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∫–∞–∫ –º–æ–¥—É–ª—è: python -m src
"""

from .admin_panel import app, FLASK_PORT
from .database import init_database, test_db, get_database_info

if __name__ == '__main__':
    import logging
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ debug
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        handlers=[
            logging.StreamHandler()
        ]
    )
    
    logger = logging.getLogger(__name__)
    logger.info("üöÄ Starting Flask application...")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_info = get_database_info()
    logger.info(f"üóÑÔ∏è Database: {db_info}")
    print(f"üóÑÔ∏è Database: {db_info['type']}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    logger.info("üîß Initializing database...")
    try:
        init_database()
        if test_db():
            logger.info("‚úÖ Database is ready")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
            logger.info("üì∫ Checking EdTech channels...")
            try:
                from .database import ChannelsDB
                active_channels = ChannelsDB.get_active_channels()
                
                if len(active_channels) == 0:
                    logger.info("‚öôÔ∏è No channels found - setting up EdTech channels...")
                    print("‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª—ã EdTech...")
                    
                    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º setup —Ñ—É–Ω–∫—Ü–∏—é
                    import sys
                    import os
                    sys.path.append(os.path.dirname(os.path.dirname(__file__)))
                    
                    try:
                        from setup_channels import EDTECH_CHANNELS
                        
                        added_count = 0
                        for channel in EDTECH_CHANNELS:
                            try:
                                ChannelsDB.add_channel(
                                    username=channel["username"],
                                    display_name=channel["display_name"],
                                    priority=channel["priority"]
                                )
                                added_count += 1
                                logger.info(f"‚úÖ Added channel: {channel['display_name']}")
                            except Exception:
                                # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
                                pass
                        
                        logger.info(f"‚úÖ Auto-setup completed: {added_count} channels added")
                        print(f"‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {added_count}")
                        
                    except Exception as setup_error:
                        logger.warning(f"‚ö†Ô∏è Channel auto-setup failed: {setup_error}")
                        print("‚ö†Ô∏è –ê–≤—Ç–æ–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –Ω–µ —É–¥–∞–ª–∞—Å—å - –¥–æ–±–∞–≤—å—Ç–µ –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
                else:
                    logger.info(f"‚úÖ Found {len(active_channels)} existing channels")
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {len(active_channels)}")
                    
            except Exception as channels_error:
                logger.warning(f"‚ö†Ô∏è Channel check failed: {channels_error}")
                print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–Ω–∞–ª—ã")
            
        else:
            logger.warning("‚ö†Ô∏è Database needs verification")
            print("‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
    except Exception as e:
        logger.error(f"‚ùå Database initialization error: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")
        import traceback
        logger.error(f"Traceback: {traceback.format_exc()}")
    
    # –®–∞–±–ª–æ–Ω—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –ø–∞–ø–∫–µ templates
    logger.info("üé® Templates should be in templates/ directory")
    
    logger.info("üåê Starting Flask server...")
    print("üåê Flask –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞!")
    print(f"üìç –ê–¥—Ä–µ—Å: http://localhost:{FLASK_PORT}")
    print("üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)")
    print("   - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã")  
    print("   - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∑–∞–ø—É—Å–∫–æ–≤")
    print("   - –ó–∞–ø—É—Å–∫ —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π")
    print("   - API endpoints")
    print("   - Health check")
    
    app.run(host='0.0.0.0', port=FLASK_PORT, debug=False)