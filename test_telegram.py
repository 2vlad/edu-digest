#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Telegram API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
–≠—Ç–∞–ø 2 PRD - –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏—ë–º–∫–∏
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

from src.telegram_client import TelegramNewsCollector
from src.database import ChannelsDB

async def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Telegram API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("="*50)
    
    collector = TelegramNewsCollector()
    
    try:
        # 3.1. –¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        print("1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –∫–ª–∏–µ–Ω—Ç–∞...")
        await collector.initialize_client()
        
        if not collector.is_authorized:
            print("‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
            print("üí° –î–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
            print("   python setup_telegram.py")
            return False
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telethon")
        
        # 3.2. –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞–Ω–∞–ª–∞—Ö
        print("\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤...")
        channels = ChannelsDB.get_active_channels()
        
        if not channels:
            print("‚ö†Ô∏è  –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            print("üí° –î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏–ª–∏ –≤—Ä—É—á–Ω—É—é –≤ –ë–î")
            return False
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(channels)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        
        # 3.3. –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª–∞–º
        print("\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª–∞–º...")
        accessible_channels = 0
        
        for channel in channels[:3]:  # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–µ 3 –∫–∞–Ω–∞–ª–∞
            username = channel['username']
            print(f"   –ü—Ä–æ–≤–µ—Ä—è–µ–º {username}...")
            
            test_result = await collector.test_channel_access(username)
            
            if test_result['status'] == 'success':
                accessible_channels += 1
                info = test_result['channel_info']
                msg_count = test_result['recent_messages_count']
                
                print(f"   ‚úÖ {info['title']} - {msg_count} —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ —á–∞—Å")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π
                if test_result['sample_messages']:
                    for i, msg in enumerate(test_result['sample_messages'], 1):
                        preview = msg['text'][:100] + "..." if len(msg['text']) > 100 else msg['text']
                        print(f"      –°–æ–æ–±—â–µ–Ω–∏–µ {i}: {preview}")
            else:
                print(f"   ‚ùå {username}: {test_result['message']}")
        
        if accessible_channels > 0:
            print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ {accessible_channels} –∫–∞–Ω–∞–ª–æ–≤")
        else:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
            return False
        
        # 3.4. –¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        print("\n4Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞...")
        
        test_channel = channels[0]['username']
        messages = await collector.get_recent_messages(test_channel, hours_back=24, limit=5)
        
        if messages:
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ {test_channel}")
            for i, msg in enumerate(messages, 1):
                date_str = msg['date'].strftime('%Y-%m-%d %H:%M:%S')
                preview = msg['text'][:150] + "..." if len(msg['text']) > 150 else msg['text']
                print(f"   {i}. [{date_str}] {preview}")
                if msg['external_links']:
                    print(f"      üîó –°—Å—ã–ª–∫–∏: {', '.join(msg['external_links'])}")
        else:
            print("‚ö†Ô∏è  –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
        
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö/–ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        
        # 3.5. –¢–µ—Å—Ç —Å–±–æ—Ä–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º
        print("\n5Ô∏è‚É£ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
        new_messages = await collector.collect_new_messages_from_channels(hours_back=6)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(new_messages)} –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 —á–∞—Å–æ–≤")
        
        if new_messages:
            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞–Ω–∞–ª–∞–º
            by_channel = {}
            for msg in new_messages:
                channel = msg['channel']
                if channel not in by_channel:
                    by_channel[channel] = 0
                by_channel[channel] += 1
            
            for channel, count in by_channel.items():
                print(f"   {channel}: {count} —Å–æ–æ–±—â–µ–Ω–∏–π")
        
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã Telegram API –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False
        
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        await collector.disconnect()

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    success = await test_telegram_integration()
    
    if success:
        print("\nüéâ –≠—Ç–∞–ø 2 PRD - –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏—ë–º–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:")
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telethon")
        print("‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        print("‚úÖ –ß—Ç–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 5 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞")  
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö/–ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞!")
        sys.exit(0)
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ setup_telegram.py")
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())